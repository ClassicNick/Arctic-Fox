diff --git a/js/src/gc/RootMarking.cpp b/js/src/gc/RootMarking.cpp
index c48f12d39ff7..0559f5470a65 100644
--- a/js/src/gc/RootMarking.cpp
+++ b/js/src/gc/RootMarking.cpp
@@ -40,16 +40,6 @@ typedef RootedValueMap::Range RootRange;
 typedef RootedValueMap::Entry RootEntry;
 typedef RootedValueMap::Enum RootEnum;
 
-// Note: the following two functions cannot be static as long as we are using
-// GCC 4.4, since it requires template function parameters to have external
-// linkage.
-
-void
-MarkPropertyDescriptorRoot(JSTracer* trc, JSPropertyDescriptor* pd, const char* name)
-{
-    pd->trace(trc);
-}
-
 // We cannot instantiate (even indirectly) the abstract JS::DynamicTraceable.
 // Instead we cast to a ConcreteTraceable, then upcast before calling trace so
 // that we get the implementation defined dynamically in the vtable.
@@ -95,8 +85,6 @@ MarkExactStackRootsAcrossTypes(T context, JSTracer* trc)
     MarkExactStackRootList<LazyScript*>(trc, context, "exact-lazy-script");
     MarkExactStackRootList<jsid>(trc, context, "exact-id");
     MarkExactStackRootList<Value>(trc, context, "exact-value");
-    MarkExactStackRootList<JSPropertyDescriptor, MarkPropertyDescriptorRoot>(
-        trc, context, "JSPropertyDescriptor");
     MarkExactStackRootList<JS::StaticTraceable,
                            js::DispatchWrapper<JS::StaticTraceable>::TraceWrapped>(
         trc, context, "StaticTraceable");
diff --git a/js/src/jsapi.h b/js/src/jsapi.h
index e54cbe0caf94..7b13c55438a9 100644
--- a/js/src/jsapi.h
+++ b/js/src/jsapi.h
@@ -2507,7 +2507,7 @@ JS_New(JSContext* cx, JS::HandleObject ctor, const JS::HandleValueArray& args);
 
 /*** Property descriptors ************************************************************************/
 
-struct JSPropertyDescriptor {
+struct JSPropertyDescriptor : public JS::StaticTraceable {
     JSObject* obj;
     unsigned attrs;
     JSGetterOp getter;
@@ -2518,9 +2518,8 @@ struct JSPropertyDescriptor {
       : obj(nullptr), attrs(0), getter(nullptr), setter(nullptr), value(JS::UndefinedValue())
     {}
 
+    static void trace(JSPropertyDescriptor* self, JSTracer* trc) { self->trace(trc); }
     void trace(JSTracer* trc);
-
-    static js::ThingRootKind rootKind() { return js::THING_ROOT_PROPERTY_DESCRIPTOR; }
 };
 
 namespace JS {
diff --git a/js/src/jspubtd.h b/js/src/jspubtd.h
index 96f350214d2f..2c90017b8dce 100644
--- a/js/src/jspubtd.h
+++ b/js/src/jspubtd.h
@@ -324,8 +324,6 @@ enum ThingRootKind
     THING_ROOT_LAZY_SCRIPT,
     THING_ROOT_ID,
     THING_ROOT_VALUE,
-    THING_ROOT_PROPERTY_DESCRIPTOR,
-    THING_ROOT_PROP_DESC,
     THING_ROOT_STATIC_TRACEABLE,
     THING_ROOT_DYNAMIC_TRACEABLE,
     THING_ROOT_LIMIT
